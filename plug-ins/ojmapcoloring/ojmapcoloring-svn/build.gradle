apply plugin: 'java'
sourceCompatibility = 1.6
targetCompatibility = 1.6
archivesBaseName = 'ojmapcoloring'

project.ext.set("appName", "ojmapcoloring")
project.ext.set("appVersion", "0.5")

repositories {
    mavenLocal()
    mavenCentral()
}

sourceCompatibility 

sourceSets {
    integrationTest {
        java.srcDir file('src/integration-test/java')
        resources.srcDir file('src/integration-test/resources')
    }
}

dependencies {
   
    compile group: 'com.vividsolutions', name: 'jts', version: '1.13'
    //OpenJUMP dependency must be installed manually
    compile group: 'com.vividsolutions', name: 'OpenJUMP', version: '1.6.1'
    //compile group: 'jgrapht', name: 'jgrapht', version: '0.7.3'
    //Need to use a local version of jgrapht to avoid conflicts
    //with the jgrapht packaged with OJ plus
    //compile group: 'jgrapht', name: 'jgrapht', version: '0.7.3'
    compile files('./lib/jgrapht-jdk1.5.jar')
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.6'

    testCompile group: 'junit', name: 'junit', version: '4.+'

    testRuntime group: 'log4j', name: 'log4j', version: '1.2.16'

    integrationTestCompile sourceSets.main.output
    integrationTestCompile configurations.testCompile
    integrationTestCompile sourceSets.test.output
    integrationTestRuntime configurations.testRuntime
}


task integrationTest(type: Test, dependsOn: jar) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    systemProperties['jar.path'] = jar.archivePath
}

task packageBinPlugin(type: Copy, dependsOn: jar) {
  project.ext.set('packageName', project.appName + '-' + project.appVersion);
  project.ext.set('packageDir', new File('build/package/' + project.packageName))
  project.packageDir.mkdirs()
}

task packageSrcPlugin(type: Copy, dependsOn: jar) {
  project.ext.set('packageSrcName', project.appName + '-src-' + project.appVersion);
  project.ext.set('packageSrcDir', new File('build/package/' + project.packageSrcName))
  project.packageDir.mkdirs()
}

//set up files for binary package
task packageBinCopy(type: Copy, dependsOn: packageBinPlugin) {

  into project.packageDir
  from 'COPYING'
  from 'NOTICE.txt'
  from 'LICENSE.txt'
  from 'CONTRIBUTORS.txt'
  from 'build/libs/ojmapcoloring.jar'
  from configurations.compile
  //we'll get these from OpenJump
  exclude '**/jts*'
  exclude '**/OpenJUMP*'
}

task packageSrcCopy(type: Copy, dependsOn: packageSrcPlugin) {

  into project.packageSrcDir
  from 'COPYING'
  from 'NOTICE.txt'
  from 'LICENSE.txt'
  from 'CONTRIBUTORS.txt'
  from 'build.gradle'
  into('src') {
    from 'src'
  }
}

task packageBinZip(type: Zip, dependsOn: packageBinCopy) {
  description 'Creates a binary package in build/distributions'
  from project.packageDir
  archiveName project.packageName + ".zip"
  into project.packageName
}

task packageSrcZip(type: Zip, dependsOn: packageSrcCopy) {
  description 'Creates a source package in build/distributions'
  from project.packageSrcDir
  archiveName project.packageSrcName + ".zip"
  into project.packageSrcName
}

check.dependsOn integrationTest
